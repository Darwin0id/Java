/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.darwin.component;

import hr.algebra.utils.FrameUtils;
import hr.darwin.UserFrame;
import hr.darwin.dal.RepositoryFactory;
import hr.algebra.utils.MessageUtils;
import hr.darwin.handler.genre.IGenre;
import hr.darwin.model.Genre;
import hr.darwin.model.GenreTableModel;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.text.JTextComponent;

/**
 *
 * @author darwin
 */
public class EditGenre extends javax.swing.JFrame {

    private List<JTextComponent> validationFields;
    private List<JLabel> errorLabels;
    
    private IGenre genreHandler;
    private GenreTableModel genreTableModel;
    private Genre selectedGenre;
    
        
    /**
     * Creates new form EditGenre
     */
    public EditGenre() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbGenre = new javax.swing.JTable();
        lblNameError = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuEdit = new javax.swing.JMenu();
        miEditMovie = new javax.swing.JMenuItem();
        miEditActor = new javax.swing.JMenuItem();
        miEditGenre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setText("Naziv");

        btnAdd.setBackground(new java.awt.Color(236, 97, 97));
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Dodaj");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Ažuriraj");
        btnUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(236, 97, 97), 2));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Obriši");
        btnDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(236, 97, 97), 2));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tbGenre.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbGenre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbGenreMouseClicked(evt);
            }
        });
        tbGenre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbGenreKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbGenre);

        lblNameError.setForeground(new java.awt.Color(255, 0, 0));

        jPanel1.setBackground(new java.awt.Color(236, 97, 97));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        menuEdit.setText("Uredi");

        miEditMovie.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        miEditMovie.setText("Film");
        miEditMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEditMovieActionPerformed(evt);
            }
        });
        menuEdit.add(miEditMovie);

        miEditActor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        miEditActor.setText("Glumci");
        miEditActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEditActorActionPerformed(evt);
            }
        });
        menuEdit.add(miEditActor);

        miEditGenre.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        miEditGenre.setText("Žanr");
        menuEdit.add(miEditGenre);

        jMenuBar1.add(menuEdit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(lblNameError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNameError, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miEditActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEditActorActionPerformed
        EditPerson editActor = new EditPerson();
        editActor.setVisible(true);
        FrameUtils.exit(this);
    }//GEN-LAST:event_miEditActorActionPerformed

    private void miEditMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEditMovieActionPerformed
        UserFrame frama = new UserFrame();
        frama.setVisible(true);
        FrameUtils.exit(this);
    }//GEN-LAST:event_miEditMovieActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
         if (formValid()) {
            try {
                selectedGenre.setName(tfName.getText().trim());
                int genreUpdate = genreHandler.updateGenre(selectedGenre);
            
                if (genreUpdate == 0) {
                    MessageUtils.showInformationMessage("Message", "Žanr je dodan!"); 
                    genreTableModel.setGenres(genreHandler.selectGenres());
                    clearForm();
                }
            } catch (Exception e) {
                Logger.getLogger(EditPerson.class.getName()).log(Level.SEVERE, null, e);
                MessageUtils.showErrorMessage("Error", "Nejde!");
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (formValid()) {
            try {
                selectedGenre.setName(tfName.getText().trim());
                int genreUpdate = genreHandler.updateGenre(selectedGenre);
            
                if (genreUpdate == 0) {
                    MessageUtils.showInformationMessage("Message", "Ažuriran!!"); 
                    genreTableModel.setGenres(genreHandler.selectGenres());
                    clearForm();
                }
            } catch (Exception e) {
                Logger.getLogger(EditPerson.class.getName()).log(Level.SEVERE, null, e);
                MessageUtils.showErrorMessage("Error", "Ne mogu ažurirati!");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
          if (MessageUtils.showConfirmDialog("Obriši", "Stvarno to želiš?") == JOptionPane.YES_OPTION) {
            try {
                int genreDelete = genreHandler.deleteGenre(selectedGenre.getId());
                if (genreDelete == 0) {
                    MessageUtils.showInformationMessage("Message", "Bravo!");
                    genreTableModel.setGenres(genreHandler.selectGenres());
                    clearForm();
                }
            } catch (Exception e) {
                Logger.getLogger(EditPerson.class.getName()).log(Level.SEVERE, null, e);
                MessageUtils.showErrorMessage("Error", "Pogreška!");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        init();
    }//GEN-LAST:event_formComponentShown

    private void tbGenreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbGenreKeyReleased
        showGenre();
    }//GEN-LAST:event_tbGenreKeyReleased

    private void tbGenreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbGenreMouseClicked
        showGenre();
    }//GEN-LAST:event_tbGenreMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditGenre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditGenre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditGenre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditGenre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditGenre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNameError;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenuItem miEditActor;
    private javax.swing.JMenuItem miEditGenre;
    private javax.swing.JMenuItem miEditMovie;
    private javax.swing.JTable tbGenre;
    private javax.swing.JTextField tfName;
    // End of variables declaration//GEN-END:variables


    private void init() {
        try {
            initValidation();
            initRepository();
            initTable();
        } catch (Exception e) {
            Logger.getLogger(EditPerson.class.getName()).log(Level.SEVERE, null, e);
            MessageUtils.showErrorMessage("Smrt", "Ne dela");
            System.exit(1);
        }
    }

    private void initValidation() {
        validationFields = Arrays.asList(tfName);
        errorLabels = Arrays.asList(lblNameError);
    }

    private void initRepository() throws Exception {
         genreHandler = RepositoryFactory.getGenreHandler();
    }

    private void initTable() throws Exception {
        tbGenre.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbGenre.setAutoCreateRowSorter(true);
        tbGenre.setRowHeight(25);
    }

    private boolean formValid() {
        boolean ok = true;

        for (int i = 0; i < validationFields.size(); i++) {
            ok &= !validationFields.get(i).getText().trim().isEmpty();
            errorLabels.get(i).setText(validationFields.get(i).getText().trim().isEmpty() ? "X" : "");
        }

        return ok;
    }

     private void clearForm() {
        validationFields.forEach(e -> e.setText(""));
        errorLabels.forEach(e -> e.setText(""));
        selectedGenre = null;
    }

    private void showGenre() {
        clearForm();
        int selectedRow = tbGenre.getSelectedRow();
        int selectedGenreID = (int) genreTableModel.getValueAt(selectedRow, 0); 
        
        try {
            Optional<Genre> optGenre = genreHandler.selectGenre(selectedGenreID);
            if (optGenre.isPresent()) {
                selectedGenre = optGenre.get();
                fillForm(selectedGenre);
            }
        } catch (Exception ex) {
            Logger.getLogger(EditPerson.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Pogreška", "Daj mi nekaj za jest da morem!");
        }
    }

    private void fillForm(Genre selectedGenre) {
        tfName.setText(selectedGenre.getName());
    }
}
